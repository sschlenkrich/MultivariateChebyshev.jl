var documenterSearchIndex = {"docs":
[{"location":"pages/chebyshev/#Chebyshev-Interpolation-Methods","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"","category":"section"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_transform","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_transform","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_transform","text":"chebyshev_transform(\n    x::AbstractVecOrMat,\n    a::Union{AbstractVector, Number} = -1.0,\n    b::Union{AbstractVector, Number} = 1.0,\n    )\n\nTransform input x from standard domain [-1, 1] to general hyper-rectangular domain.\n\n\n\n\n\n","category":"function"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_inverse_transform","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_inverse_transform","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_inverse_transform","text":"chebyshev_inverse_transform(\n    y::AbstractVecOrMat,\n    a::Union{AbstractVector, Number} = -1.0,\n    b::Union{AbstractVector, Number} = 1.0,\n    )\n\nTransform input y from general hyper-rectangular domain to standard domain [-1, 1].\n\n\n\n\n\n","category":"function"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_points","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_points","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_points","text":"chebyshev_points(degrees::AbstractVector{<:Integer})\n\nCalculate the Chebyshev points of second kind used for interpolation.\n\ndegree is a list if integers. Each entry represents the maximum polynomial degree per dimension, length(degrees) corresponds to the number of dimensions\n\nNote that Chebyshev points of second represent the extrema of Chebyshev polynomials of first kind.\n\n\n\n\n\n","category":"function"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_multi_points","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_multi_points","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_multi_points","text":"Calculate multivariate Chebyshev points on a standard domain [-1,1].\n\ndegree is a list if integers. Each entry represents the maximum polynomial degree per dimension, length(degrees) corresponds to the number of dimensions\n\nReturns a matrix of size (N, D).\n\nNumber of rows N equals product over all (Nd + 1) where Nd is the maximum polynomial degree in dimension d (d=1...D) and D is the number of dimensions of the tensor, i.e. number of axes of Array.\n\n\n\n\n\n","category":"function"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_polynomials","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_polynomials","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_polynomials","text":"Calculate the Chebyshev polynomials T0(x), ..., TN(x) for up to maximum degree N equal to max_degree.\n\nInput x can be a float or a vector in the range [-1, 1] (element-wise).\n\nReturns a float if input x is a float or a vector if input x is a vector.\n\n\n\n\n\n","category":"function"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_batch_call","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_batch_call","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_batch_call","text":"chebyshev_batch_call(\n   C::AbstractArray,\n   x::AbstractMatrix,\n   )\n\nCalculate\n\nz = [...[C * T(xD)] * ...] * T(x1)\n\nfor a tensor C and input points x.\n\nT(xd) are Chebyshev polynomials to degree Nd.\n\nInput C is an n-dim Array with suitable size. size(C) .- 1 specifies the maximum polynomial degrees per dimension.\n\nInput x is a matrix of size (N, D). First dimension N represents batch size and second dimension D represents number of dimensions of tensor.\n\nReturns a vector of size (N,).\n\nThis is the basic operation for calibration and and interpolation.\n\nRe-shaping is to ensure proper broadcast in multiplication.\n\n\n\n\n\nchebyshev_batch_call(\n   C::AbstractArray,\n   x::AbstractMatrix,\n   matmul::Function,\n   )\n\nCalculate\n\nz = [...[C * T(xD)] * ...] * T(x1)\n\nfor a tensor C and input points x.\n\nT(xd) are Chebyshev polynomials to degree Nd.\n\nInput C is an n-dim Array with suitable size. size(C) .- 1 specifies the maximum polynomial degrees per dimension.\n\nInput x is a matrix of size (N, D). First dimension N represents batch size and second dimension D represents number of dimensions of tensor.\n\nInput matmul is a Python-like matmul function with multiplication along the last two dimension and broadcasting along the remaining first dimensions.\n\nReturns a vector of size (N,).\n\n\n\n\n\n","category":"function"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_coefficients","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_coefficients","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_coefficients","text":"chebyshev_coefficients(\n    degrees::AbstractVector{<:Integer},\n    multi_points::AbstractMatrix,\n    values::AbstractVector,\n    matmul::Union{Function, Nothing} = nothing,\n    )\n\nCalculate coefficients of Chebyshev basis functions.\n\ndegree is a list if integers. Each entry represents the maximum polynomial degree per dimension, length(degrees) corresponds to the number of dimensions.\n\nmulti_points is a matrix of multivariate Chebyshev points on a standard domain [-1,1].\n\nvalues is a vector representing the target function values for each D-dimensional multivariate Chebyshev point on the transformed domain of the tagret function.\n\nmatmul may be a Python-like matmul function. Alternatively, batchmul is used for tensor multiplication.\n\nMethod returns an Array of size degrees .+ 1.\n\n\n\n\n\n","category":"function"},{"location":"pages/chebyshev/","page":"Chebyshev Interpolation Methods","title":"Chebyshev Interpolation Methods","text":"MultivariateChebyshev.chebyshev_interpolation","category":"page"},{"location":"pages/chebyshev/#MultivariateChebyshev.chebyshev_interpolation","page":"Chebyshev Interpolation Methods","title":"MultivariateChebyshev.chebyshev_interpolation","text":"Calcuate multivariate Chebyshev interpolation.\n\nInput y is a matrix of size (N, D) where N is batch size and D is the number of dimensions. Input is assumed from general hyper-rectangular domain.\n\ncoeff is an n-dim array representing the calibrated Chebyshev tensor coefficients.\n\na and b are float or vector representing the lower and upper boundaries of the interpolation domain. If a or b is an array then we require length(a|b) and equal to size(y)[end].\n\nmatmul may be a Python-like matmul function. Alternatively, batchmul is used for tensor multiplication.\n\nMethod returns a vector of size (N,).\n\n\n\n\n\n","category":"function"},{"location":"pages/function_index/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"pages/function_index/","page":"Index","title":"Index","text":"","category":"page"},{"location":"pages/matrix_methods/#Matrix-Methods","page":"Matrix Methods","title":"Matrix Methods","text":"","category":"section"},{"location":"pages/matrix_methods/","page":"Matrix Methods","title":"Matrix Methods","text":"This page contains methods for matrix operations.","category":"page"},{"location":"pages/matrix_methods/","page":"Matrix Methods","title":"Matrix Methods","text":"MultivariateChebyshev.cartesian_product","category":"page"},{"location":"pages/matrix_methods/#MultivariateChebyshev.cartesian_product","page":"Matrix Methods","title":"MultivariateChebyshev.cartesian_product","text":"cartesian_product(arrays::AbstractVector{<:AbstractVector})\n\nCalculate the cartesian product of a list of input arrays.\n\nParameter arrays represents a list of input vectors.\n\nMethod returns a Matrix of size (N, D) where D equals the number of input vectors and N equals the product of lengths of input vectors.\n\n\n\n\n\n","category":"function"},{"location":"pages/matrix_methods/","page":"Matrix Methods","title":"Matrix Methods","text":"MultivariateChebyshev.matmul","category":"page"},{"location":"pages/matrix_methods/#MultivariateChebyshev.matmul","page":"Matrix Methods","title":"MultivariateChebyshev.matmul","text":"matmul(A::AbstractArray, B::AbstractArray)\n\nGeneralised matrix multiplication along last two dimensions.\n\nThis method mimics Numpy's matmul behaviour.\n\n\n\n\n\n","category":"function"},{"location":"pages/matrix_methods/","page":"Matrix Methods","title":"Matrix Methods","text":"MultivariateChebyshev.batchmul","category":"page"},{"location":"pages/matrix_methods/#MultivariateChebyshev.batchmul","page":"Matrix Methods","title":"MultivariateChebyshev.batchmul","text":"batchmul(A::AbstractArray, B::AbstractArray)\n\nGeneralised matrix multiplication along first two dimensions.\n\n\n\n\n\n","category":"function"},{"location":"#Multivariate-Chebyshev","page":"Multivariate Chebyshev","title":"Multivariate Chebyshev","text":"","category":"section"},{"location":"","page":"Multivariate Chebyshev","title":"Multivariate Chebyshev","text":"This package contains code for approximating multivariate functions using Chebyshev interpolation.","category":"page"},{"location":"","page":"Multivariate Chebyshev","title":"Multivariate Chebyshev","text":"Details on the methodology are discussed in this paper.","category":"page"},{"location":"","page":"Multivariate Chebyshev","title":"Multivariate Chebyshev","text":"For examples how to use the package you can have a look into the tests code.","category":"page"}]
}
